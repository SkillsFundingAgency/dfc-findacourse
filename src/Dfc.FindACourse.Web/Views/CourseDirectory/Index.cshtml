@using Dfc.FindACourse.Common;
@using Dfc.FindACourse.Web.HtmlHelpers;
@using Dfc.FindACourse.Web.ViewModels.CourseDirectory;
@model Dfc.FindACourse.Web.ViewModels.CourseDirectory.IndexViewModel;
@using Microsoft.Extensions.Options;
@using Dfc.FindACourse.Common.Settings;
@inject IOptions<App> appSettings

@{
    ViewData["Title"] = "Index";
    ViewBag.ContentContainerClass = "index-page";
}

<div class="grid-row">
    <div class="column-two-thirds">
        <h1 class="heading-xlarge">@Html.Raw(appSettings.Value.Page1Title)</h1>
        <p class="white">
            @Html.Raw(appSettings.Value.Page1Text1)
        </p>
        <form id="FindACourseForm"
              name="FindACourseForm"
              method="get"
              asp-controller="CourseDirectory"
              asp-action="CourseSearchResult">
            <div class="form-group">
                <label class="form-label" for="SubjectKeyword">
                    @Html.Raw(appSettings.Value.Page1Text2)
                    <span class="form-hint">@Html.Raw(appSettings.Value.Page1Text3)</span>
                </label>
                <div class="auto-complete-container">
                    <span asp-validation-for="SubjectKeyword"></span>
                    <input asp-for="SubjectKeyword"
                           class="form-control form-control-1-1"
                           autocomplete="off"
                           placeholder="Enter a course name or subject" 
                           autofocus />
                    <ul id="course-list"></ul>
                </div>
            </div>
            <div class="form-group">
                <label class="form-label" for="QualificationLevels">
                    @Html.Raw(appSettings.Value.Page1Text4)
                    <span class="form-hint">
                        <a target="_blank" href="@Html.Raw(appSettings.Value.ContentQualLink)">@Html.Raw(appSettings.Value.Page1Text5)</a>
                    </span>
                </label>
                @*<dfc-select class="form-control form-control-1-1" id="QualificationLevel" name="QualificationLevel"
                        dfc-items="Html.GetEnumSelectList<QualificationLevel>()"
                        dfc-ignored-item-values="@(new Enum[] { QualificationLevel.Level9, QualificationLevel.LevelNa })">
                        <option value="">Select level</option>
                    </dfc-select>*@
                <select class="form-control form-control-1-1 input-layout" id="QualificationLevel" name="QualificationLevels">
                    @foreach (var item in Model.QualificationLevels)
                    {

                        <option value="@item.Value">
                            @item.Text
                        </option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label class="form-label" for="Location">
                    Location (Optional)
                    <span class="form-hint">Enter a full postcode. For example, S1 1WB</span>
                </label>

                @if (Model.LocationHasError)
                {
                    <span asp-validation-for="Location" class="field-validation-error">@Model.LocationError</span>
                }
                else
                {
                    <span asp-validation-for="Location"></span>
                }

                @{
                    var inputValidationErrorCssClass = (Model.LocationHasError) ? "input-validation-error" : string.Empty;
                }

                <input asp-for="Location"
                       class="form-control @inputValidationErrorCssClass"
                       placeholder="Postcode or town"
                       autocomplete="off"
                       type="text"
                       value="@Model.Location" />
                <input type="hidden" id="LocationCoordinates" name="LocationCoordinates" value="" />
                <dfc-select id="LocationRadius"
                            name="LocationRadius"
                            class="form-control form-control-1-4"
                            dfc-items="Html.GetEnumSelectList<RadiusDistance>()"
                            dfc-selected-item="Html.GetEnumSelectListItem<IndexViewModel, RadiusDistance>(Model.DefaultRadiusDistance)">
                </dfc-select>
            </div>
            <div class="form-group">
                <input class="button" type="submit" id="Search" name="Search" value="Search">
            </div>
        </form>
    </div>
</div>
