@using Dfc.FindACourse.Common;
@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Http.Extensions;
@using Dfc.FindACourse.Web.HtmlHelpers;
@using Dfc.FindACourse.Web.ViewModels.CourseDirectory;
@using System.Web;
@model Dfc.FindACourse.Web.ViewModels.CourseDirectory.CourseSearchResultViewModel;

@{
    ViewData["Title"] = "CourseSearchResult";
}
<form id="FindACourseForm"
      name="FindACourseForm"
      action="/" method="post">
    <div class="grid-row">
        <div class="column-full">
            <h1 class="heading-xlarge">Search results for</h1>
        </div>
    </div>
    <div class="grid-row">
        <div class="column-one-third">
            <div class="grid-row">
                <div class="column-full">
                    <div class="form-group">
                        <input asp-for="Location"
                               class="form-control form-control-2-3"
                               placeholder="Postcode or town"
                               autocomplete="off"
                               type="text" />
                        <dfc-select id="LocationRadius"
                                    name="LocationRadius"
                                    class="form-control form-control-1-3"
                                    dfc-items="Html.GetEnumSelectList<RadiusDistance>()"
                                    dfc-selected-item="Html.GetEnumSelectListItem<CourseSearchResultViewModel, RadiusDistance>(Model.DefaultRadiusDistance)">
                        </dfc-select>
                    </div>
                </div>
            </div>
            <div class="grid-row">
                <div class="column-full">
                    <div class="accordion">
                        <div class="accordion-header">
                            <div class="accordion-heading">Age suitability</div>
                            <a href="http://www.google.co.uk">Some link going some where</a>
                            <div class="accordion-subheading">888 selected</div>
                            <span class="accordion-header-icon"></span>
                        </div>
                        <div class="accordion-panel">
                            <ul>
                                <li>
                                    <input type="radio" name="DfeFunded" id="DfeFundedAll" value="All" />
                                    <label for="DfeFundedAll">All ages</label>
                                </li>
                                <li>
                                    <input type="radio" name="DfeFunded" id="DfeFunded1619" value="1619" />
                                    <label for="DfeFunded1619">16 to 19 year-olds</label>
                                </li>
                                <li>
                                    <input type="radio" name="DfeFunded" id="DfeFunded19Plus" value="19Plus" />
                                    <label for="DfeFunded19Plus">19+ year-olds</label>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="column-two-thirds">
            <div class="grid-row">
                <div class="column-full">
                    <div class="form-group">
                        <div class="auto-complete-container">
                            <span asp-validation-for="SubjectKeyword"></span>
                            <input asp-for="SubjectKeyword"
                                   class="form-control form-control-1-1"
                                   autocomplete="off"
                                   placeholder="Enter a course name or subject" />
                            <ul id="course-list"></ul>
                            <input class="button" type="submit" id="Search" name="Search" value="Search" />
                        </div>
                    </div>
                    <a href="#">Print or download these search results </a>
                    <span>Showing 1-10 of @Model.NoOfRecords results</span>
                    <div class="form-group">
                        <label class="form-label" for="SortBy">Sort by:</label>
                        <dfc-select id="SortBy"
                                    name="SortBy"
                                    class="form-control form-control-1-4"
                                    dfc-items="Html.GetEnumSelectList<SortBy>()">
                        </dfc-select>
                    </div>
                    <hr />
                </div>
            </div>
            <div class="grid-row">
                <div class="column-full">
                    @if (Model.Items.Any())
                    {
                        @foreach (var item in Model.Items)
                        {
                            <div class="search-result-item">
                                <h3>
                                    <a asp-action="CourseDetails" asp-route-id="@item.Id" asp-route-distance="@item.Distance">@item.CourseTitle</a>

                                </h3>
                                <div class="result-item-qualification-level">@item.QualificationLevel.GetDisplayName()</div>
                                <ul class="result-item-course-attendence-study-mode-info">
                                    @if (item.IsDisplayble(item.StudyMode))
                                    {
                                        <li>@item.StudyMode.GetDisplayName()</li>
                                    }

                                    @if (item.IsDisplayble(item.AttendanceMode) && item.IsDisplayble(item.StudyMode))
                                    {
                                        <li> | @item.AttendanceMode.GetDisplayName() </li>
                                    }
                                    else if (item.IsDisplayble(item.AttendanceMode))
                                    {
                                        <li>@item.AttendanceMode.GetDisplayName()</li>
                                    }

                                    @if (item.IsDisplayble(item.AttendencePattern) && item.IsDisplayble(item.AttendanceMode))
                                    {
                                        <li> | @item.AttendencePattern.GetDisplayName() </li>
                                    }
                                    else if (item.IsDisplayble(item.AttendencePattern))
                                    {
                                        <li>@item.AttendencePattern.GetDisplayName()</li>
                                    }
                                </ul>
                                <ul class="result-item-course-info">
                                    <li>
                                        <span class="label">Provider:</span>
                                        <span class="value">@item.ProviderName</span>
                                    </li>
                                    <li>
                                        <span class="label">Location:</span>
                                        <span class="value">@item.Location</span>
                                    </li>
                                    @if (!string.IsNullOrWhiteSpace(Model.Location))
                                    {
                                        <li>
                                            <span class="label">Distance:</span>
                                            <span class="value">@item.Distance miles</span>
                                        </li>
                                    }
                                    <li>
                                        <span class="label">Start date:</span>
                                        <span class="value">@item.StartDate</span>
                                    </li>
                                    <li>
                                        <span class="label">Duration:</span>
                                        <span class="value">@item.Duration</span>
                                    </li>
                                </ul>
                            </div>
                        }

                            <div class="pagination">
                                <a href="" class="pagination-item pagination-previous">previous</a>

                                @for (var i = 1; i <= Model.NoOfPages; i++)
                                {
                                    var ub = new UriBuilder(Context.Request.GetDisplayUrl());
                                    var qs = HttpUtility.ParseQueryString(ub.Query);
                                    qs.Set(nameof(Model.PageNo), i.ToString());
                                    ub.Query = qs.ToString();

                                    if (i == Model.PageNo)
                                    {
                                        <a href="@ub.ToString()" class="pagination-item current">@i</a>
                                    }
                                    else
                                    {
                                        <a href="@ub.ToString()" class="pagination-item">@i</a>
                                    }
                                }

                                <a href="" class="pagination-item pagination-next">next</a>
                            </div>
                    }
                    else
                    {
                        <p>There are no courses matching that name. Make sure that you've spelled it correctly, or use a broader description of the course.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</form>

